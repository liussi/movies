{"version":3,"file":"static/js/600.faa2d25c.chunk.js","mappings":"iKAGA,MAAMA,EAAU,+BAGVC,EAAa,CACjBC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAADC,OALF,yNASPC,eAAeC,IACrB,IAEE,aADuBC,EAAAA,EAAMC,IAAI,GAADJ,OAAIL,EAAO,qBAAqBC,IAChDS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAEQN,eAAeQ,EAAUC,GAC/B,IAKE,aAJuBP,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,WAAAK,OAAUU,EAAO,YAC3Bd,IAEcS,KAAKM,IACvB,CAAE,MAAOJ,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAEON,eAAeW,EAAaF,GACjC,IAKE,aAJuBP,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,WAAAK,OAAUU,EAAO,YAC3Bd,IAEcS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAEON,eAAeY,EAAeH,GACnC,IAKE,aAJuBP,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,WAAAK,OAAUU,GACpBd,IAEcS,IAClB,CAAE,MAAOE,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAGON,eAAea,EAAkBC,GACtC,IAKE,aAJuBZ,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,wBAAAK,OAAuBe,EAAM,8CACvCnB,IAEcS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,C,sGCxEA,MAAMS,EAAYC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAItBC,EAAiBJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4EAM3BG,EAAaN,EAAAA,EAAOO,IAAGC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uIAQvBM,EAAOT,EAAAA,EAAOU,GAAEC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wF,aCoBtB,QAlCA,WACE,MAAOT,EAAMkB,IAAWC,EAAAA,EAAAA,UAAS,KAC3B,QAAEpB,IAAYqB,EAAAA,EAAAA,MAcpB,OAXAC,EAAAA,EAAAA,YAAU,MACRvB,EAAAA,EAAAA,IAAUC,GACPuB,MAAK5B,IACJwB,EAAQxB,EAAK,IAEd6B,OAAM3B,IACLC,QAAQD,MAAMA,EAAM,GACpB,GACH,CAACG,KAIFyB,EAAAA,EAAAA,KAACnB,EAAS,CAAAoB,UACRD,EAAAA,EAAAA,KAACT,EAAI,CAAAU,SACFzB,EAAK0B,KAAI,CAACC,EAAOC,KAChBC,EAAAA,EAAAA,MAACnB,EAAc,CAAAe,SAAA,EACbD,EAAAA,EAAAA,KAACZ,EAAU,CACTkB,IAAG,GAAAzC,OAnBA,mCAmBWA,OAAGsC,EAAMI,cACvBC,IAAI,GACJC,MAAO,OAETT,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAMO,QACXL,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,eAAaE,EAAMQ,eAPHP,QAa/B,C","sources":["api/api.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OWRjNzIzMjY1YjdjMzZiOWJhNDE0N2E5NzQ4N2M4OCIsInN1YiI6IjY1MTE3ZDllMjZkYWMxMDBhYzA5OTE3YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aWkR21zshqWnzB_Rinad0qTA6B3gODh5i3MASIEagk4';\n\nconst apiOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  },\n};\n\nexport  async function fetchPopularFilms() {\n  try {\n    const response = await axios.get(`${baseUrl}/trending/all/day`, apiOptions);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport  async function fetchCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits`,\n      apiOptions\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieData(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}`,\n      apiOptions\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n\nexport async function fetchSearchMovies(movies) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst ActorContainer = styled.div`\n  flex: 0 0 auto;\n  margin-right: 20px; \n  text-align: center;\n`;\n\nconst ActorImage = styled.img`\n  width: 120px;\n  height: 180px;\n  object-fit: cover;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst List = styled.ul`\n  display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between; \n`\n\n\n\nexport { ActorImage, Container, ActorContainer ,List};","\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../api/api';\nimport {ActorImage, Container, ActorContainer, List } from './Cast.styled'\n\nfunction Cast  ()  {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const urlImg = 'https://image.tmdb.org/t/p/w500';\n  \n  useEffect(() => {\n    fetchCast(movieId)\n      .then(data => {\n        setCast(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n \n\n  return (\n    <Container>\n      <List>\n        {cast.map((actor, index) => (\n          <ActorContainer key={index}>\n            <ActorImage\n              src={`${urlImg}${actor.profile_path}`}\n              alt=\"\"\n              width={120}\n            />\n            <li>{actor.name}</li>\n            <p>Character : {actor.character}</p>\n          </ActorContainer>\n        ))}\n      </List>\n    </Container>\n  );\n};\nexport default Cast;\n"],"names":["baseUrl","apiOptions","headers","accept","Authorization","concat","async","fetchPopularFilms","axios","get","data","results","error","console","fetchCast","movieId","cast","fetchReviews","fetchMovieData","fetchSearchMovies","movies","Container","styled","div","_templateObject","_taggedTemplateLiteral","ActorContainer","_templateObject2","ActorImage","img","_templateObject3","List","ul","_templateObject4","setCast","useState","useParams","useEffect","then","catch","_jsx","children","map","actor","index","_jsxs","src","profile_path","alt","width","name","character"],"sourceRoot":""}