{"version":3,"file":"static/js/396.b24a1fc4.chunk.js","mappings":"iKAGA,MAAMA,EAAU,+BAGVC,EAAa,CACjBC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAADC,OALF,yNASPC,eAAeC,IACrB,IAEE,aADuBC,EAAAA,EAAMC,IAAI,GAADJ,OAAIL,EAAO,qBAAqBC,IAChDS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAEQN,eAAeQ,EAAUC,GAC/B,IAKE,aAJuBP,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,WAAAK,OAAUU,EAAO,YAC3Bd,IAEcS,KAAKM,IACvB,CAAE,MAAOJ,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAEON,eAAeW,EAAaF,GACjC,IAKE,aAJuBP,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,WAAAK,OAAUU,EAAO,YAC3Bd,IAEcS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAEON,eAAeY,EAAeH,GACnC,IAKE,aAJuBP,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,WAAAK,OAAUU,GACpBd,IAEcS,IAClB,CAAE,MAAOE,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CAGON,eAAea,EAAkBC,GACtC,IAKE,aAJuBZ,EAAAA,EAAMC,IAAI,GAADJ,OAC3BL,EAAO,wBAAAK,OAAuBe,EAAM,8CACvCnB,IAEcS,KAAKC,OACvB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,C,kGCxEA,MAAMS,EAAgBC,EAAAA,EAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iDAKzBC,EAAmBJ,EAAAA,EAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8C,aC4BjC,QA9BA,WACE,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KACjC,QAAEhB,IAAYiB,EAAAA,EAAAA,MAWpB,OATAC,EAAAA,EAAAA,YAAU,MACRhB,EAAAA,EAAAA,IAAaF,GACVmB,MAAKxB,IACJoB,EAAWpB,EAAK,IAEjByB,OAAMvB,IACLC,QAAQD,MAAMA,EAAM,GACpB,GACH,CAACG,KAEFqB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGR,EAAQS,OAAS,EAChBT,EAAQU,KAAI,CAACC,EAAQC,KACnBC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEK,EAAAA,EAAAA,MAACrB,EAAa,CAAAgB,SAAA,CAAC,YAAUG,EAAOA,WAChCJ,EAAAA,EAAAA,KAACV,EAAgB,CAAAW,SAAEG,EAAOG,YAFnBF,MAMXL,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+CAKb,C","sources":["api/api.jsx","components/Reviews/Revievs.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OWRjNzIzMjY1YjdjMzZiOWJhNDE0N2E5NzQ4N2M4OCIsInN1YiI6IjY1MTE3ZDllMjZkYWMxMDBhYzA5OTE3YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aWkR21zshqWnzB_Rinad0qTA6B3gODh5i3MASIEagk4';\n\nconst apiOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  },\n};\n\nexport  async function fetchPopularFilms() {\n  try {\n    const response = await axios.get(`${baseUrl}/trending/all/day`, apiOptions);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport  async function fetchCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits`,\n      apiOptions\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieData(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}`,\n      apiOptions\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n\nexport async function fetchSearchMovies(movies) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}","import styled from '@emotion/styled';\n\nconst AuthorHeading = styled.h3`\n  font-size: 1.2rem;\n  color: #333; \n`;\n\nconst ContentParagraph = styled.p`\n  font-size: 1rem;\n  color: #666;\n`;\n\n\nexport { AuthorHeading, ContentParagraph };","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../api/api';\nimport {ContentParagraph,AuthorHeading} from './Revievs.styled'\n\nfunction Reviews () {\n  const [rewiews, setRewiews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(data => {\n        setRewiews(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n  return (\n    <div>\n      <ul>\n        {rewiews.length > 0 ? (\n          rewiews.map((author, index) => (\n            <li key={index}>\n              <AuthorHeading>Author : {author.author}</AuthorHeading>\n              <ContentParagraph>{author.content}</ContentParagraph>\n            </li>\n          ))\n        ) : (\n          <p>We dont have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["baseUrl","apiOptions","headers","accept","Authorization","concat","async","fetchPopularFilms","axios","get","data","results","error","console","fetchCast","movieId","cast","fetchReviews","fetchMovieData","fetchSearchMovies","movies","AuthorHeading","styled","h3","_templateObject","_taggedTemplateLiteral","ContentParagraph","p","_templateObject2","rewiews","setRewiews","useState","useParams","useEffect","then","catch","_jsx","children","length","map","author","index","_jsxs","content"],"sourceRoot":""}