{"version":3,"file":"static/js/276.4a421398.chunk.js","mappings":"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","sources":["api/api.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OWRjNzIzMjY1YjdjMzZiOWJhNDE0N2E5NzQ4N2M4OCIsInN1YiI6IjY1MTE3ZDllMjZkYWMxMDBhYzA5OTE3YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aWkR21zshqWnzB_Rinad0qTA6B3gODh5i3MASIEagk4';\n\nconst apiOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  },\n};\n\nexport  async function fetchPopularFilms() {\n  try {\n    const response = await axios.get(`${baseUrl}/trending/all/day`, apiOptions);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport  async function fetchCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits`,\n      apiOptions\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieData(movieId) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/movie/${movieId}`,\n      apiOptions\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n\nexport async function fetchSearchMovies(movies) {\n  try {\n    const response = await axios.get(\n      `${baseUrl}/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n      apiOptions\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst LinkContainer = styled.div`\nmargin-top: 20px;\n\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n \n  color: #000000;\n  box-shadow: 0 4px 10px rgba(236, 117, 6, 0.505);\n  padding: 20px;\n`;\n\n\nconst Wrapper = styled.div`\n  margin-top: 20px;\n  padding: 20px;\n  box-shadow: 0 4px 5px rgba(236, 117, 6, 0.505);\n`;\n\nconst LinkButton = styled(Link)`\nmargin-top: 20px;\n  color: #0a0e11; \n  text-decoration: none; \n  text-align: center;\n  cursor: pointer; \n  &:hover {\n    color: #0056b3; \n  }\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  \n`;\n\nconst Image = styled.img`\nmargin-right: 20px;\n  width: 400px;\n  height: 400px;\n  object-fit: cover;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\nconst Text = styled.p`\n  font-weight: bold;\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\n  background: linear-gradient(to right, black, #dd7709);\n    -webkit-background-clip: text; \n    -webkit-text-fill-color: transparent;\n  margin-bottom: 40px;\n  font-weight: bold; \n  text-align: center;\n`;\n\nconst Span = styled.span`\n  font-weight: normal;\n`;\n\nconst WrapInfo= styled.div`\n      display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n      /* transition: box-shadow 0.3s;\n   &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); \n  } */\n\n`\nconst FilmLink = styled(Link)`\n  display: block;\n  font-size: 20px;\n \n  color: #000000;\n  text-decoration: none;\n  margin: 10px 0;\nfont-weight: bold; \nborder-radius: 25%;\npadding: 10px;\n    transition: box-shadow 0.3s;\n   &:hover {\n    box-shadow: 0 0 10px rgba(207, 103, 12, 0.5); \n  }\n`;\n\nexport {\n  Wrapper,\n  Span,\n  Text,\n  Image,\n  InfoContainer,\n  Container,\n  LinkButton,\n  LinkContainer,\n  Title,\n  WrapInfo,\n  FilmLink\n};","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieData } from '../../api/api';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport {\n  Image,\n  InfoContainer,\n  Container,\n  LinkButton,\n  Text,\n  Span,\n  Wrapper,\n  LinkContainer,\n  Title,\n  WrapInfo,\n  FilmLink,\n} from './MovieDetails.styled';\n\nfunction MovieDetails ()  {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState([]);\n  const location = useLocation();\n  const urlImg = 'https://image.tmdb.org/t/p/w500';\n  const backLinckLocation = useRef(location.state);\n\n  const getFilmById = filmId => {\n    return movieData.find(film => film.id === filmId);\n  };\n\n  useEffect(() => {\n    fetchMovieData(movieId)\n      .then(data => {\n        setMovieData(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  const { title, poster_path, backdrop_path, popularity, overview } = movieData;\n\n  return (\n    <div>\n      <LinkContainer>\n        <IconContext.Provider value={{ size: '0.8em' }}>\n          <LinkButton to={backLinckLocation.current}>\n            <FaArrowLeft /> Go back\n          </LinkButton>\n        </IconContext.Provider>\n      </LinkContainer>\n      <Container key={getFilmById.id}>\n        <Image\n          src={`${urlImg}${poster_path || backdrop_path}`}\n          width={120}\n          height={120}\n          alt={title}\n        />\n        <InfoContainer>\n          <Title>{title}</Title>\n          <Text>\n            User Score: <Span>{Math.floor(popularity)}%</Span>\n          </Text>\n          <Text>Overview</Text>\n          <Span>{overview}</Span>\n          <Text>Genres </Text>\n          {movieData.genres && movieData.genres.length > 0 && (\n            <Span>{movieData.genres.map(genre => genre.name).join(', ')}</Span>\n          )}\n        </InfoContainer>\n      </Container>\n      <Wrapper>\n        <Title>Additional information</Title>\n        <WrapInfo>\n           <li>\n          <FilmLink to=\"cast\">Cast</FilmLink>\n        </li>\n        <li>\n          <FilmLink to=\"reviews\">Reviews</FilmLink>\n        </li>\n        </WrapInfo>\n       \n      </Wrapper>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["baseUrl","apiOptions","headers","accept","Authorization","concat","async","fetchPopularFilms","axios","get","data","results","error","console","fetchCast","movieId","cast","fetchReviews","fetchMovieData","fetchSearchMovies","movies","LinkContainer","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Wrapper","_templateObject3","LinkButton","Link","_templateObject4","InfoContainer","_templateObject5","Image","img","_templateObject6","Text","p","_templateObject7","Title","h2","_templateObject8","Span","span","_templateObject9","WrapInfo","_templateObject10","FilmLink","_templateObject11","useParams","movieData","setMovieData","useState","location","useLocation","backLinckLocation","useRef","state","useEffect","then","catch","title","poster_path","backdrop_path","popularity","overview","_jsxs","children","_jsx","IconContext","Provider","value","size","to","current","FaArrowLeft","src","width","height","alt","Math","floor","genres","length","map","genre","name","join","filmId","find","film","id","Outlet"],"sourceRoot":""}